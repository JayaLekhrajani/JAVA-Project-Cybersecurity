/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.AdminRole;
import Business.Role.SOCAdminRole;
import Business.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Jaya_L
 */
public class SystemAdminWorkAreaJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    EcoSystem system;
    ImageIcon imageIcon;

    /**
     * Creates new form SystemAdminWorkAreaJPanel
     */
    public SystemAdminWorkAreaJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        //imageIcon = new ImageIcon("/resources/images.png");
       
         populateTree();
        
        
    }
    
    void populateTree()
    {
    
    //public void init() throws MalformedURLException{
    DefaultTreeModel model = (DefaultTreeModel) JTree.getModel();
    
    ArrayList<Network> networkList = system.getNetworkList();
        ArrayList<Enterprise> enterpriseList;
        ArrayList<Organization> organizationList;
        Network network;
        Enterprise enterprise;
        Organization organization;
         
        
        
        DefaultMutableTreeNode networks = new DefaultMutableTreeNode("Network");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        root.removeAllChildren();
        root.insert(networks, 0);
       
        
        
        DefaultMutableTreeNode networkNode;
        DefaultMutableTreeNode enterpriseNode;
        DefaultMutableTreeNode organizationNode;
        //IconNode[] nodes = new IconNode[networkList.size()];
        
        for (int i = 0; i < networkList.size(); i++) {
            network = networkList.get(i);
            networkNode = new DefaultMutableTreeNode(network.getName());
            networks.insert(networkNode, i);

            enterpriseList = network.getEnterpriseDirectory().getEnterpriseList();

            for (int j = 0; j < enterpriseList.size(); j++) {
                enterprise = enterpriseList.get(j);
                enterpriseNode = new DefaultMutableTreeNode(enterprise.getName());
                networkNode.insert(enterpriseNode, j);

                organizationList = enterprise.getOrganizationDirectory().getOrganizationList();
                for (int k = 0; k < organizationList.size(); k++) {
                    organization = organizationList.get(k);
                    organizationNode = new DefaultMutableTreeNode(organization.getName());
                    enterpriseNode.insert(organizationNode, k);
                }
            }
        }
        
    /*DefaultTreeCellRenderer cellRenderer = (DefaultTreeCellRenderer) JTree.getCellRenderer();
cellRenderer.setOpenIcon(new ImageIcon("/images.png"));
cellRenderer.setClosedIcon(new ImageIcon("closed.gif"));
cellRenderer.setLeafIcon(new ImageIcon("leaf.gif"));*/




        model.reload();
        
      }  
        
        
    //}
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTree = new javax.swing.JTree();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        networkNameCombo = new javax.swing.JTable();
        lblName = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        networknameJCombo = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Savebtn = new javax.swing.JButton();
        networkJCombobox = new javax.swing.JComboBox();
        enterpriseJCombobox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJTextfield = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        enterpriseUserJTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        enterpriseCombo = new javax.swing.JComboBox();
        networkCombo = new javax.swing.JComboBox();
        userNameJTextField = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        Savebtn1 = new javax.swing.JButton();
        passwordJTextField = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(600, 720));

        jTabbedPane1.setForeground(new java.awt.Color(0, 102, 255));
        jTabbedPane1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        JTree.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 204), 5, true));
        JTree.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("NU Bank USA");
        JTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(JTree);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View Map", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(null);

        networkNameCombo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        networkNameCombo.setFont(new java.awt.Font("Calibri", 2, 18)); // NOI18N
        networkNameCombo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        networkNameCombo.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(networkNameCombo);
        if (networkNameCombo.getColumnModel().getColumnCount() > 0) {
            networkNameCombo.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel4.add(jScrollPane2);
        jScrollPane2.setBounds(103, 105, 366, 209);

        lblName.setText("Name");
        jPanel4.add(lblName);
        lblName.setBounds(144, 360, 27, 14);

        btnSave.setBackground(new java.awt.Color(0, 102, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel4.add(btnSave);
        btnSave.setBounds(356, 356, 57, 23);

        networknameJCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MA", "NY", "NJ", "TX", "PA", "CA" }));
        jPanel4.add(networknameJCombo);
        networknameJCombo.setBounds(223, 357, 85, 20);

        jTabbedPane1.addTab("Manage Network", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(null);

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(enterpriseJTable);
        if (enterpriseJTable.getColumnModel().getColumnCount() > 0) {
            enterpriseJTable.getColumnModel().getColumn(0).setResizable(false);
            enterpriseJTable.getColumnModel().getColumn(1).setResizable(false);
            enterpriseJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel5.add(jScrollPane3);
        jScrollPane3.setBounds(55, 44, 426, 171);

        jLabel1.setText("Network");
        jPanel5.add(jLabel1);
        jLabel1.setBounds(108, 286, 40, 14);

        jLabel2.setText("Enterprise Type");
        jPanel5.add(jLabel2);
        jLabel2.setBounds(108, 338, 76, 14);

        Savebtn.setText("Save");
        Savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavebtnActionPerformed(evt);
            }
        });
        jPanel5.add(Savebtn);
        Savebtn.setBounds(252, 433, 57, 23);

        networkJCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboboxActionPerformed(evt);
            }
        });
        jPanel5.add(networkJCombobox);
        networkJCombobox.setBounds(252, 283, 110, 20);

        enterpriseJCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboboxActionPerformed(evt);
            }
        });
        jPanel5.add(enterpriseJCombobox);
        enterpriseJCombobox.setBounds(252, 335, 110, 20);

        jLabel3.setText("Name");
        jPanel5.add(jLabel3);
        jLabel3.setBounds(108, 389, 27, 14);
        jPanel5.add(enterpriseJTextfield);
        enterpriseJTextfield.setBounds(252, 386, 110, 20);

        jTabbedPane1.addTab("Manage Enterprise", jPanel5);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        enterpriseUserJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise", "User Name", "Network"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(enterpriseUserJTable);
        if (enterpriseUserJTable.getColumnModel().getColumnCount() > 0) {
            enterpriseUserJTable.getColumnModel().getColumn(0).setResizable(false);
            enterpriseUserJTable.getColumnModel().getColumn(1).setResizable(false);
            enterpriseUserJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(90, 80, 390, 230);

        jLabel4.setText("Name");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(150, 560, 27, 14);

        jLabel5.setText("Enterprise");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(150, 440, 60, 14);

        jLabel6.setText("Network");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(150, 390, 60, 14);

        jLabel7.setText("Password");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(150, 520, 50, 14);

        jLabel8.setText("User Name");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(150, 480, 60, 14);

        enterpriseCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(enterpriseCombo);
        enterpriseCombo.setBounds(290, 437, 110, 20);

        networkCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkComboActionPerformed(evt);
            }
        });
        jPanel1.add(networkCombo);
        networkCombo.setBounds(290, 387, 111, 20);
        jPanel1.add(userNameJTextField);
        userNameJTextField.setBounds(290, 477, 110, 20);
        jPanel1.add(jTextField3);
        jTextField3.setBounds(290, 554, 110, 20);

        Savebtn1.setText("Save");
        Savebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Savebtn1ActionPerformed(evt);
            }
        });
        jPanel1.add(Savebtn1);
        Savebtn1.setBounds(300, 620, 57, 23);
        jPanel1.add(passwordJTextField);
        passwordJTextField.setBounds(290, 516, 110, 20);

        jTabbedPane1.addTab("Manage Enterprise Admin", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:

        populateTree();
        populateNetworkTable();
        populateEnterpriseTable();
        populateComboBox();
        populateEntAdTable();
populateNetworkComboBox();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        String name =(String) networknameJCombo.getSelectedItem();

        Network network = system.createAndAddNetwork();
        network.setName(name);

        populateNetworkTable();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void SavebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavebtnActionPerformed
        // TODO add your handling code here:
        
         Network network = (Network) networkJCombobox.getSelectedItem();
        Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) enterpriseJCombobox.getSelectedItem();

        if (network == null || type == null) {
            JOptionPane.showMessageDialog(null, "Invalid Input!");
            return;
        }

        String name = enterpriseJTextfield.getText();
if(enterpriseJTextfield.getText().equals(""))
{

JOptionPane.showMessageDialog(null, "Invalid Input!");
            return;
}
       

Enterprise enterprise = network.getEnterpriseDirectory().createAndAddEnterprise(name, type);
enterprise.setNetworkname(network.getName());
JOptionPane.showMessageDialog(null, "Enterprise added successfully");
        populateEnterpriseTable();
    }//GEN-LAST:event_SavebtnActionPerformed

    private void Savebtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Savebtn1ActionPerformed
        // TODO add your handling code here:
        Enterprise enterprise = (Enterprise) enterpriseCombo.getSelectedItem();
        
        String username = userNameJTextField.getText();
        String password = String.valueOf(passwordJTextField.getPassword());
        String name = jTextField3.getText();
        
        
  if(userNameJTextField.getText().equals("")||userNameJTextField.getText().equals("")||jTextField3.getText().equals(""))      
  {
  
  JOptionPane.showMessageDialog(null,"Please enter all the values in the fields");
  return;
  
  }
        if(!system.checkIfUsernameIsUnique(username))
   {
   JOptionPane.showMessageDialog(null, "User Name is not unique");
   return;
   
   }
        Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
      if(enterprise.getEnterpriseType()==Enterprise.EnterpriseType.BANK)
      {UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
      }
      if(enterprise.getEnterpriseType()==Enterprise.EnterpriseType.SOCENTERPRISE)
      {
     UserAccount account= enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new SOCAdminRole());
      
      }
      populateEntAdTable();
        
    }//GEN-LAST:event_Savebtn1ActionPerformed

    private void networkComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkComboActionPerformed
        // TODO add your handling code here:
        Network network = (Network) networkCombo.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
        
    }//GEN-LAST:event_networkComboActionPerformed

    private void networkJComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_networkJComboboxActionPerformed

    private void enterpriseJComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboboxActionPerformed
void populateNetworkTable()
{
    
DefaultTableModel model = (DefaultTableModel) networkNameCombo.getModel();

model.setRowCount(0);
        for (Network network : system.getNetworkList()) 
        {
            Object[] row = new Object[1];
            row[0] = network.getName();
            model.addRow(row);
        }
}

void populateEnterpriseTable()
{
    DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                Object[] row = new Object[3];
                row[0] = enterprise.getName();
                row[1] = network.getName();
                row[2] = enterprise.getEnterpriseType().getValue();

                model.addRow(row);
            }
        }


}
void populateComboBox()
{
    
    
     networkJCombobox.removeAllItems();
        enterpriseJCombobox.removeAllItems();
   for (Network network : system.getNetworkList()) {
            networkJCombobox.addItem(network);
        }

        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
            enterpriseJCombobox.addItem(type);     
        
}

}
void populateEntAdTable()
{
    DefaultTableModel model = (DefaultTableModel) enterpriseUserJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }


}

void populateNetworkComboBox()
{
networkCombo.removeAllItems();
        
        for (Network network : system.getNetworkList()){
            networkCombo.addItem(network);
        }


}

void populateEnterpriseComboBox(Network network)
{
enterpriseCombo.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            enterpriseCombo.addItem(enterprise);
        }
}




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree JTree;
    private javax.swing.JButton Savebtn;
    private javax.swing.JButton Savebtn1;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox enterpriseCombo;
    private javax.swing.JComboBox enterpriseJCombobox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JTextField enterpriseJTextfield;
    private javax.swing.JTable enterpriseUserJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel lblName;
    private javax.swing.JComboBox networkCombo;
    private javax.swing.JComboBox networkJCombobox;
    private javax.swing.JTable networkNameCombo;
    private javax.swing.JComboBox<String> networknameJCombo;
    private javax.swing.JPasswordField passwordJTextField;
    private javax.swing.JTextField userNameJTextField;
    // End of variables declaration//GEN-END:variables
}
