/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.BankEmployeeRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.MonitoringTeamOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SuspiciousActivityRequest;
import java.awt.CardLayout;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author jayal
 */
public class SendMailJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount ua;
    Enterprise enterprise;
    EcoSystem system;
    int counter=0;
    FileWriter writer;
    Calendar cal = Calendar.getInstance();
    SimpleDateFormat sdf = new SimpleDateFormat("yy/MM/dd HH:mm:ss");
    
    /**
     * Creates new form SendMailJPanel
     */
    public SendMailJPanel(JPanel userProcessContainer,UserAccount ua,Enterprise enterprise, EcoSystem system, FileWriter writer) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.ua=ua;
        this.enterprise=enterprise;
        this.system=system;
        this.writer=writer;
        
        
        try
       {
       
         writer=new FileWriter("C:\\Users\\jayal\\Desktop\\NEU\\AED Applications\\ProjectAED\\BankStaffSessions.txt",true);
          //bw=new BufferedWriter(writer);
          writer.write(System.lineSeparator());
          writer.write(System.lineSeparator());
          writer.write(" User" +ua.getUsername() + "session tried to send mails==Normal Activity"+sdf.format(cal.getTimeInMillis()));
          writer.flush();
          //writer.close();
        //out = new PrintWriter(bw);
        
       
       }
        catch(IOException e)
        {
        System.out.println("Unable to write");
        
        } 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        emailAddressTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        subjectTextField = new javax.swing.JTextField();
        fileSizeCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Recepient Email Address");
        add(jLabel1);
        jLabel1.setBounds(100, 80, 149, 15);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Send");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(289, 259, 90, 23);
        add(emailAddressTextField);
        emailAddressTextField.setBounds(280, 80, 120, 20);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Subject");
        add(jLabel2);
        jLabel2.setBounds(100, 130, 80, 15);
        add(subjectTextField);
        subjectTextField.setBounds(280, 140, 120, 20);

        fileSizeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "More than 1 GB", "Less than 1 GB" }));
        add(fileSizeCombo);
        fileSizeCombo.setBounds(488, 80, 99, 20);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("File Size");
        add(jLabel3);
        jLabel3.setBounds(410, 80, 47, 15);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/home.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(0, 0, 83, 61);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        String s =(String)fileSizeCombo.getSelectedItem();
        Employee e;
        
        
        if(emailAddressTextField.getText().equals("")||subjectTextField.getText().equals(""))
        {
        JOptionPane.showMessageDialog(null, "please enter all the fields");
        return;
        }
       if(ua.getPerson() instanceof Employee)
       {
       
       e=(Employee)ua.getPerson();
       if(e.getAccountType().equalsIgnoreCase("Regular"))
       {
       if(s.equalsIgnoreCase("More than 1 GB"))
       {
           //JOptionPane.showMessageDialog(null, "Exceeded the capacity");
           counter++;
           system.setNumberofsuspiciousevents(system.getNumberofsuspiciousevents()+counter);
           System.out.print("\n");
           System.out.println("Suspicious events" + (system.getNumberofsuspiciousevents()+counter));
          
           SuspiciousActivityRequest request=new SuspiciousActivityRequest();
           request.setMessage("User has excedded permissible file-sending capacity");
           request.setSender(ua);
           request.setStatus("Sent");
                 try{
 writer.write(System.lineSeparator());
writer.write("Sent a file of huge size--Abnormal Activity"+sdf.format(cal.getTime()));
writer.flush();
//writer.close();

}

catch(IOException ex)
{

ex.printStackTrace();

}
           
           
          Organization org=null; 
         for(Network n:system.getNetworkList())
       {
           for(Enterprise ent:n.getEnterpriseDirectory().getEnterpriseList())
           {
               
               if(ent.getEnterpriseType()==ent.getEnterpriseType().SOCENTERPRISE && ent.getNetworkname().equalsIgnoreCase(enterprise.getNetworkname()))
               {         
        for (Organization organization : ent.getOrganizationDirectory().getOrganizationList())
        {
            
            if (organization instanceof MonitoringTeamOrganization)
            {
                org = organization;
                break;
            }
        }
           } 
               if(org!=null)
              break;
               
        }
          if(org!=null)
              break; 
           
       }  
           
         if (org!=null){
             system.opentickets++;
             system.numberofsuspiciousevents++;
            org.getWorkQueue().getWorkRequestList().add(request);
            ua.getWorkQueue().getWorkRequestList().add(request);   
             
           JOptionPane.showMessageDialog(null, "File has been sent");
       
       }
       }
       else
       {
           
           JOptionPane.showMessageDialog(null, "File has been sent");
           
           try{

writer.write("Sent a file as an attachment --Normal Activity"+sdf.format(cal.getTime()));

}

catch(Exception e2)
{}
           
           
           
           
           
           
           
       }
       
       
       }
       else
       {
       JOptionPane.showMessageDialog(null, "File has been sent");
       
               try{

writer.write("Sent a file as an attachment --Normal Activity"+sdf.format(cal.getTime()));

}

catch(Exception e1)
{}
       
       
       
       
       
       
       
       
       }
       
       
       }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emailAddressTextField;
    private javax.swing.JComboBox fileSizeCombo;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField subjectTextField;
    // End of variables declaration//GEN-END:variables
}
