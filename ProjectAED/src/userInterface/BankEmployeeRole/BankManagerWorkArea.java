/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.BankEmployeeRole;

import Business.Customer.Customer;
import Business.Enterprise.Enterprise;
import Business.Organization.BankEmployeeOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SuspiciousActivityRequest;
import Business.WorkQueue.TransferFundWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jayal
 */
public class BankManagerWorkArea extends javax.swing.JPanel {
JPanel userProcessContainer;
UserAccount account;
BankEmployeeOrganization organization;
Enterprise enterprise;
    /**
     * Creates new form BankManagerWorkArea
     */
    public BankManagerWorkArea(JPanel userProcessContainer, UserAccount account, BankEmployeeOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.organization=organization;
        this.enterprise=enterprise;
        populatetable();
        
    }
void populatetable()
{
DefaultTableModel model = (DefaultTableModel)anomalousActivityTable.getModel();
model.setRowCount(0);
for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
    
    
    
    if(request instanceof SuspiciousActivityRequest){
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getPerson().getName();
            //=(Customer)request.getSender().getPerson();
            
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
            row[3] = request.getStatus();
            
            model.addRow(row);
            
            
            
        }
    

}


}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        anomalousActivityTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        workOnIt = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        anomalousActivityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(anomalousActivityTable);
        if (anomalousActivityTable.getColumnModel().getColumnCount() > 0) {
            anomalousActivityTable.getColumnModel().getColumn(0).setResizable(false);
            anomalousActivityTable.getColumnModel().getColumn(1).setResizable(false);
            anomalousActivityTable.getColumnModel().getColumn(2).setResizable(false);
            anomalousActivityTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(160, 50, 360, 200);

        jLabel1.setText("My Work Area");
        add(jLabel1);
        jLabel1.setBounds(10, 10, 90, 14);

        jButton1.setText("Assign to Me");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(220, 290, 93, 23);

        workOnIt.setText("Work on it");
        workOnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOnItActionPerformed(evt);
            }
        });
        add(workOnIt);
        workOnIt.setBounds(400, 290, 120, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = anomalousActivityTable.getSelectedRow();
       if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
       
          WorkRequest request1 = (WorkRequest)anomalousActivityTable.getValueAt(selectedRow, 0);
        if(request1.getStatus().equalsIgnoreCase("Completed"))
        {
        
        JOptionPane.showMessageDialog(null, "Work is completed.Select some other request");
        return;
        
        
        }
        if(request1.getStatus().equalsIgnoreCase("Pending"))
        {
        
        JOptionPane.showMessageDialog(null, "Work is pending.Start working on it");
        return;
        
        
        }  
          
          
        request1.setReceiver(account);
        request1.setStatus("Pending");
        populatetable();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void workOnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOnItActionPerformed
        // TODO add your handling code here:
     int selectedRow = anomalousActivityTable.getSelectedRow();
       if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
       
       
           SuspiciousActivityRequest request1 = (SuspiciousActivityRequest)anomalousActivityTable.getValueAt(selectedRow, 0);
           
           if(request1.getStatus().equalsIgnoreCase("Completed"))
           {
           JOptionPane.showMessageDialog(null, "Work is completed. Select some other request");
           return;
           
           }
           
          if(!request1.getStatus().equalsIgnoreCase("Pending"))
           {
           JOptionPane.showMessageDialog(null, "Please assign the request to your queue");
           return;
           
           } 
           
           
        request1.setStatus("Processing");
        ProcessSuspiciousActivity panel=new ProcessSuspiciousActivity(userProcessContainer, request1, account, enterprise, organization);
         userProcessContainer.add("processSusspiciousActivity", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
        
        
        
        
    }//GEN-LAST:event_workOnItActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable anomalousActivityTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton workOnIt;
    // End of variables declaration//GEN-END:variables
}
