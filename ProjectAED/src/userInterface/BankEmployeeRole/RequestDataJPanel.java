/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.BankEmployeeRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.MonitoringTeamOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SuspiciousActivityRequest;
import java.awt.CardLayout;
import java.io.FileWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author jayal
 * 
 */


public class RequestDataJPanel extends javax.swing.JPanel {

    /**
     * Creates new form InfoJPanel
     */
    
    JPanel userProcessContainer;
    UserAccount useraccount;
    Enterprise enterprise;
    Employee e;
    int count;
    EcoSystem system;
    FileWriter writer;
    Calendar cal = Calendar.getInstance();
    SimpleDateFormat sdf = new SimpleDateFormat("yy/MM/dd HH:mm:ss");
    
    public RequestDataJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, EcoSystem system, FileWriter writer) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.useraccount=userAccount;
        this.enterprise=enterprise;
        this.system=system;
        this.writer=writer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        btnClientDetails = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Cutomer Account Information");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(220, 150, 210, 23);

        btnClientDetails.setBackground(new java.awt.Color(255, 255, 255));
        btnClientDetails.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClientDetails.setText("Client Details");
        btnClientDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientDetailsActionPerformed(evt);
            }
        });
        add(btnClientDetails);
        btnClientDetails.setBounds(220, 200, 210, 23);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/home.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(580, 10, 83, 61);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(useraccount.getPerson() instanceof Employee)
       {
        
        e=(Employee) useraccount.getPerson();
        
        //
       }
       if(e.getAccountType().equalsIgnoreCase("Business"))
       {
           JOptionPane.showMessageDialog(null, "File and encrypted password has been sent to your official emailID");
       }
        if(e.getAccountType().equalsIgnoreCase("Regular"))
        {
        
            
            //System.out.println("Suspicious event no "+ EcoSystem.numberofsuspiciousevents);
            JOptionPane.showMessageDialog(null, "You are not authorized to view the requested data");
            
        
        count++;
        if(count==2)
        {
        system.numberofsuspiciousevents++;
        
        SuspiciousActivityRequest request=new SuspiciousActivityRequest();
            request.setMessage("User trying to view sensitive data");
            request.setSender(useraccount);
            request.setStatus("Sent");
            Organization org = null;
            
       for(Network n:system.getNetworkList())
       {
           for(Enterprise ent:n.getEnterpriseDirectory().getEnterpriseList())
           {
               if(ent.getEnterpriseType()==ent.getEnterpriseType().SOCENTERPRISE)
                   
               {
                   if(ent.getNetworkname().equalsIgnoreCase(enterprise.getNetworkname()))
               {         
        for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof MonitoringTeamOrganization){
                org = organization;
                break;
            }
        }
               }
          if(org!=null)
              break;
               
               }      
          
               
               
             if(org!=null)
                 break;
               
        }
       }
       
       if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            useraccount.getWorkQueue().getWorkRequestList().add(request);
           // selectedAcc.setReq(request);
            
        } 
        
        
      try{

writer.write(useraccount.getUsername() +"Requested for sensitive data , Not authorized to view --AbNormal Activity"+sdf.format(cal.getTime()));

}

catch(Exception e)
{}
          
        
        
        
        
        
        
        
        
        }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnClientDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientDetailsActionPerformed
        // TODO add your handling code here:
        
       
        if(useraccount.getPerson() instanceof Employee)
       {
        
        e=(Employee) useraccount.getPerson();
        
        
     if(e.getAccountType().equalsIgnoreCase("Business"))
       {
           JOptionPane.showMessageDialog(null, "File and encrypted password has been sent to your official emailID");
       }   
        
        
        if(e.getAccountType().equalsIgnoreCase("Regular"))
            
        {
            
            JOptionPane.showMessageDialog(null, "You are not authorized to view the data");
            
            
            try{

writer.write(useraccount.getUsername() +"Requested for sensitive data , Not authorized to view --AbNormal Activity"+sdf.format(cal.getTime()));

}

catch(Exception e)
{}
        system.numberofsuspiciousevents++;
        
       SuspiciousActivityRequest request=new SuspiciousActivityRequest();
            request.setMessage("User trying to view sensitive data");
            request.setSender(useraccount);
            request.setStatus("Sent");
            Organization org = null;
            
            
        for(Network n:system.getNetworkList())
       {
           for(Enterprise ent:n.getEnterpriseDirectory().getEnterpriseList()){
               if(ent.getEnterpriseType()==ent.getEnterpriseType().SOCENTERPRISE &&(ent.getNetworkname().equals(enterprise.getNetworkname())))
               {         
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof MonitoringTeamOrganization){
                org = organization;
                break;
            }
        }
           }      
               
        }
       }
       
       if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            useraccount.getWorkQueue().getWorkRequestList().add(request);
           // selectedAcc.setReq(request);
            
        } 
        
          
        
        
        
        
            
        }
       
       
       
       }
        
        
        
        
        
    }//GEN-LAST:event_btnClientDetailsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClientDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
