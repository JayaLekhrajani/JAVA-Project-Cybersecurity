/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.MonitoringTeamRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.IMTeamOrganization;

import Business.Organization.MonitoringTeamOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SuspiciousActivityRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Jaya_L
 */
public class MonitoringTeamWorkArea extends javax.swing.JPanel {
private JPanel userProcessContainer;
private MonitoringTeamOrganization organization;
private Enterprise enterprise;
private UserAccount userAccount;
private EcoSystem system;

    /**
     * Creates new form MonitoringTeamWorkArea
     */
    public MonitoringTeamWorkArea(JPanel userProcessContainer, UserAccount account, MonitoringTeamOrganization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=account;
        this.enterprise=enterprise;
        this.organization=organization;
        this.system=system;
        populateTable();
        
        
        
        
        
    }
    
    void populateTable()
    {
    
    DefaultTableModel model = (DefaultTableModel)OpenTicketsJTable.getModel();
model.setRowCount(0);

for(WorkRequest request : organization.getWorkQueue().getWorkRequestList())
    
{

if(request instanceof SuspiciousActivityRequest)
{
Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getPerson().getName();
            //=(Customer)request.getSender().getPerson();
            
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
            row[3] = request.getStatus();
            row[4]= ((SuspiciousActivityRequest) request).getCriticallevel();
            
            model.addRow(row);


}


}
    
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        container1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OpenTicketsJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnworkonit = new javax.swing.JButton();
        criticalityJComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        MessageJTextField = new javax.swing.JTextField();
        Meesagelabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jSplitPane1.setDividerLocation(80);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        container1.setBackground(new java.awt.Color(255, 255, 255));
        container1.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Tickets Opened");
        container1.add(jLabel5);
        jLabel5.setBounds(40, 60, 150, 22);

        OpenTicketsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "UserAccount", "Receiver", "Status", "Criticality"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(OpenTicketsJTable);
        if (OpenTicketsJTable.getColumnModel().getColumnCount() > 0) {
            OpenTicketsJTable.getColumnModel().getColumn(0).setResizable(false);
            OpenTicketsJTable.getColumnModel().getColumn(1).setResizable(false);
            OpenTicketsJTable.getColumnModel().getColumn(2).setResizable(false);
            OpenTicketsJTable.getColumnModel().getColumn(3).setResizable(false);
            OpenTicketsJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        container1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 120, 520, 250);

        jButton1.setText("Assign to Me");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        container1.add(jButton1);
        jButton1.setBounds(60, 400, 110, 23);

        btnworkonit.setText("Work on it");
        btnworkonit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnworkonitActionPerformed(evt);
            }
        });
        container1.add(btnworkonit);
        btnworkonit.setBounds(200, 400, 150, 23);

        criticalityJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Critical", "High", "Medium" }));
        container1.add(criticalityJComboBox);
        criticalityJComboBox.setBounds(640, 120, 61, 20);

        jLabel4.setText("Critical Level");
        container1.add(jLabel4);
        jLabel4.setBounds(560, 120, 60, 14);
        container1.add(MessageJTextField);
        MessageJTextField.setBounds(210, 460, 130, 20);

        Meesagelabel.setText("Message");
        container1.add(Meesagelabel);
        Meesagelabel.setBounds(70, 460, 90, 14);

        jSplitPane1.setBottomComponent(container1);

        jPanel2.setLayout(null);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/dashboards.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 1, 255, 83);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/analysis.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel3);
        jLabel3.setBounds(254, 0, 300, 84);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/environment.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel1);
        jLabel1.setBounds(490, 0, 290, 80);

        jSplitPane1.setLeftComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        //int m=getsuccessfulattempts();
        
        
        DashBoarJPanel panel=new DashBoarJPanel(userProcessContainer,system);
        userProcessContainer.add("DashBoardJPanel", panel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
        
        
        
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = OpenTicketsJTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
        WorkRequest request1 = (WorkRequest)OpenTicketsJTable.getValueAt(selectedRow, 0);
        
        if(request1.getStatus().equalsIgnoreCase("Completed"))
          {
          JOptionPane.showMessageDialog(null, "Work Completed. Select some other request");
          return;
          
          
          
          }
          
          if(request1.getStatus().equalsIgnoreCase("Pending"))
          {
          JOptionPane.showMessageDialog(null, "Work is Pending. can start working on it");
          return;
          
          
          
          }
        
        
        request1.setReceiver(userAccount);
        request1.setStatus("Pending");
        populateTable();
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnworkonitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnworkonitActionPerformed
        // TODO add your handling code here:
       int selectedRow = OpenTicketsJTable.getSelectedRow();
       if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
       
           SuspiciousActivityRequest request1 = (SuspiciousActivityRequest)OpenTicketsJTable.getValueAt(selectedRow, 0);
           if(request1.getStatus().equalsIgnoreCase("Completed"))
          {
          JOptionPane.showMessageDialog(null, "Work Completed. Select some other request");
          return;
          
          
          
          }
           
           
        request1.setStatus("Processing");
        
        system.opentickets++;
        if(MessageJTextField.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter the message");
            return;
        
        
        }
        
     String sel=(String)criticalityJComboBox.getSelectedItem();
        
        if(sel.equalsIgnoreCase("critical"))
        {
        system.criticaltickets++;
        request1.setMessage(MessageJTextField.getText());
        request1.setStatus("Escalated");
        request1.setCriticallevel(sel);
        populateTable();
        Organization org=null;
        for (Organization organization2 : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization2 instanceof IMTeamOrganization)
            
            {
                org = organization2;
                break;
            }
            
            if(org!=null)
            {
                break;
            }
            
        }
            
          if(org!=null)
          org.getWorkQueue().getWorkRequestList().add(request1);   
            
        
        }
        
        
        if(sel.equalsIgnoreCase("high"))
        {
            JOptionPane.showMessageDialog(null, "Ticket asigned to another team");
            request1.setCriticallevel(sel);
            populateTable();
        request1.setMessage(MessageJTextField.getText());
        request1.setStatus("Assignining it to other team");
        //system.opentickets--;
        //system.closedTickets++;
        system.hightickets++;
        Enterprise selected=null;
      for(Network n:system.getNetworkList()) 
      {
      for(Enterprise e:n.getEnterpriseDirectory().getEnterpriseList())
      {
      
      if(e.getNetworkname().equalsIgnoreCase(enterprise.getNetworkname()) &&e.getEnterpriseType()==e.getEnterpriseType().BANK)
      {
      
      
      selected=e;
      break;
      
      
      
      }
      
      
      
      if(selected!=null)
          break;
      }
      
      if(selected!=null)
          break;
      
      }
        
        
       if(selected!=null)
           selected.getWorkQueue().getWorkRequestList().add(request1);
        
        
        
        }
       
           
        
        
        if(sel.equalsIgnoreCase("medium")) 
            
            
        {
        
        system.opentickets--;
        system.closedTickets++;
        populateTable();
        
        request1.setCriticallevel(sel);
        request1.setStatus("Completed");
        
        
        
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
        
       // WorkonTicketsJPanel panel=new WorkonTicketsJPanel(userProcessContainer, request1, userAccount, enterprise, organization, system);
         //userProcessContainer.add("processSusspiciousActivity", panel);
        //CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        //layout.next(userProcessContainer); 
        
        
        
    }//GEN-LAST:event_btnworkonitActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        
        AnalysisJPanel panel=new AnalysisJPanel(userProcessContainer,system);
        userProcessContainer.add("AnalysisJpanel", panel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        
        EnvironmentJPanel panel=new EnvironmentJPanel(userProcessContainer,system);
        userProcessContainer.add("AnalysisJpanel", panel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jLabel1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Meesagelabel;
    private javax.swing.JTextField MessageJTextField;
    private javax.swing.JTable OpenTicketsJTable;
    private javax.swing.JButton btnworkonit;
    private javax.swing.JPanel container1;
    private javax.swing.JComboBox criticalityJComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
